name: My Docker Deployment
on:
    push:
        branches:
            - master
jobs:
    build_and_deploy:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build Multi Docker Image
          run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-client ./client
            docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-nginx ./nginx
            docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-server ./server
            docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-worker ./worker

        - name: üîê Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Push Multi Docker Image
          run: |
            docker push ${{ secrets.DOCKER_USERNAME }}/multi-client
            docker push ${{ secrets.DOCKER_USERNAME }}/multi-nginx
            docker push ${{ secrets.DOCKER_USERNAME }}/multi-server
            docker push ${{ secrets.DOCKER_USERNAME }}/multi-worker
        - name: üì¶ Prepare Elastic Beanstalk bundle
          run: |
           echo "üì¶ Creating deployment bundle zip..."
           zip -r deploy.zip Dockerrun.aws.json
           echo "‚úÖ Bundle created: deploy.zip"

        - name: ‚òÅ Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ secrets.AWS_REGION }}

        - name: üöÄ Deploy to Elastic Beanstalk
          run: |
            echo "üöÄ Uploading new application version to Elastic Beanstalk..."
            TIMESTAMP=$(date +%Y%m%d%H%M%S)

            aws s3 cp deploy.zip "s3://${{ secrets.S3_BUCKET_NAME }}/docker-multi/${TIMESTAMP}.zip"

            aws elasticbeanstalk create-application-version \
                --application-name "multi-docker" \
                --version-label "${TIMESTAMP}" \
                --source-bundle S3Bucket="multi-docker-deploy-bucket",S3Key="${TIMESTAMP}.zip"

            aws elasticbeanstalk update-environment \
                --environment-name "Multi-docker-env" \
                --version-label "${TIMESTAMP}"

            echo "üéâ Deploy triggered to Elastic Beanstalk environment Multi-docker-env"
